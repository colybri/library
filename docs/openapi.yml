openapi: 3.1.0
info:
  version: 1.0.0
  title: Library
  description: A simple API for manage your personal library
servers:
  - url: https://localhost/v1
paths:
  /author:
    post:
      description: Create new author
      security:
        - BearerToken:
            - 'public'
      content:
        application/json:
        schema:
          type: Author
            $ref: "#/components/schemas/Author"
        responses:
          '201':
            description: Successfully created a new author
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
    put:
      description: Update an author
      security:
        - BearerToken:
            - 'public'
      content:
        application/json:
        schema:
          type: Author
            $ref: "#/components/schemas/Author"
        responses:
          '200':
            description: Successfully updated an author
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
    delete:
      description: Delete an author
      security:
        - BearerToken:
            - 'public'
      content:
        application/json:
      properties:
        id:
          type: string
        responses:
          '200':
            description: Successfully updated an author
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
  /publisher:
    post:
      description: Create new publisher
      security:
        - BearerToken:
            - 'public'
      content:
        application/json:
        schema:
          type: Author
            $ref: "#/components/schemas/Publisher"
        responses:
          '201':
            description: Successfully created a new author
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
    put:
      description: Update an publisher
      security:
        - BearerToken:
            - 'public'
      content:
        application/json:
        schema:
          type: Author
            $ref: "#/components/schemas/Author"
        responses:
          '201':
            description: Successfully updated an author
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
  /country:
    post:
      description: Create new publisher
      security:
        - BearerToken:
            - 'public'
      content:
        application/json:
        schema:
          type: Author
            $ref: "#/components/schemas/Author"
        responses:
          '201':
            description: Successfully created a new author
          '400':
            description: Invalid request
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
components:
  securitySchemes:

    BearerToken:
      scheme: bearer
        type: http
      bearerFormat: jwt
      description: 'note: non-oauth scopes are not defined at the securityScheme level'

    Author:
      required:
        - id
        - name
        - countryId
        - isPseudonumOf
        - bornYear
        - deathYear
      properties:
        id:
          type: string
        name:
          type: string
        countryId:
          type: string
        isPseudonymOf:
          type: [ string, "null" ]
        bornYear:
          type: integer
        deathYear:
          type: [ integer, "null" ]
